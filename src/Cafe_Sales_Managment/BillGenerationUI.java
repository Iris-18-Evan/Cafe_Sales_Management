/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Cafe_Sales_Managment;
import javax.swing.*;                     
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;         
import java.sql.*;                          
import java.util.*;       

/**
 *
 * @author ucwaz
 */
public class BillGenerationUI extends javax.swing.JFrame {

    /**
     * Creates new form BillGenerationUI
     */
    public BillGenerationUI() {
        initComponents();
    }
    public double recalculateFinalTotal() {
    double runningTotal = 0.0;
    
    // Assuming 'OrderitemTable' is the correct name for your JTable object.
    javax.swing.table.DefaultTableModel itemModel = (javax.swing.table.DefaultTableModel) OrderitemTable.getModel(); 

    for (int i = 0; i < itemModel.getRowCount(); i++) {
        try {
            // Corrected: Remove the 'row:' and 'column:' labels.
            // We read the value from the third column (index 2).
            Object itemValue = itemModel.getValueAt(i, 2); 
            
            // This line is already correct.
            runningTotal += Double.parseDouble(itemValue.toString()); 
        } catch (NumberFormatException e) {
            // Log a warning if a number can't be read, but keep processing other items.
            System.err.println("Warning: Encountered non-numeric item total at row " + i);
        }
    }
    
    // This line is now correct.
    return runningTotal; 
}
    public void addOrderItem(Object[] rowData) {
        javax.swing.table.DefaultTableModel model
                = (javax.swing.table.DefaultTableModel) OrderitemTable.getModel();

        model.addRow(rowData);
    }

// Method to receive and set the final grand total display
    public void setGrandTotal(double total) {
        String formattedTotal = String.format("%.2f", total);
        txtGrandtotal.setText(formattedTotal);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderitemTable = new javax.swing.JTable();
        lblGrandtotal = new javax.swing.JLabel();
        btnReturn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCash = new javax.swing.JTextField();
        txtGrandtotal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bill Generation");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 400));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Customer");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 80, -1));

        txtCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerActionPerformed(evt);
            }
        });
        jPanel1.add(txtCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 170, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Order items");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 150, -1));

        jButton1.setText("Finalize & Print Bill");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 130, -1));

        OrderitemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Method", "Amount", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(OrderitemTable);
        if (OrderitemTable.getColumnModel().getColumnCount() > 0) {
            OrderitemTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 380, 90));

        lblGrandtotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblGrandtotal.setForeground(new java.awt.Color(0, 0, 0));
        lblGrandtotal.setText("Grand Total");
        jPanel1.add(lblGrandtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 100, -1));

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });
        jPanel1.add(btnReturn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 430, 20));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Payment Method");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, -1, -1));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Cash Tendered");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 100, 20));
        jPanel1.add(txtCash, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, 100, -1));

        txtGrandtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrandtotalActionPerformed(evt);
            }
        });
        jPanel1.add(txtGrandtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 100, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 340));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        DashboardUI DUI = new DashboardUI();
        DUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // First, let's make sure the final math is correct before we print.
            double finalAmountDue = recalculateFinalTotal();

            // Update the screen with the final confirmed total.
            txtGrandtotal.setText(String.format("%.2f", finalAmountDue));

           
            StringBuilder receiptText = new StringBuilder();


            // Check if we know who the customer is
            String customerID = txtCustomer.getText().trim();
            if (customerID.isEmpty()) {
                customerID = "Guest Shopper";
            }

            receiptText.append("Customer: ").append(customerID).append("\n");
            receiptText.append("Date:     ").append(new java.util.Date()).append("\n");
            

            // --- Itemized List (The 'what they bought' section) ---
            receiptText.append(String.format("%-20s %5s %8s\n", "ITEM", "QTY", "SUBTOTAL"));
            

            javax.swing.table.DefaultTableModel itemModel = (javax.swing.table.DefaultTableModel) OrderitemTable.getModel();

            // Loop through the table to grab each item's details
            for (int i = 0; i < itemModel.getRowCount(); i++) {
                String itemName = itemModel.getValueAt(i, 0).toString(); // Name of the item (e.g., Coffee, Service Fee)
                String quantity = itemModel.getValueAt(i, 1).toString(); // The 'Amount' column
                String itemSubtotal = itemModel.getValueAt(i, 2).toString(); // The 'Total' column for that item

                // Format it nicely for the receipt printout
                receiptText.append(String.format("%-20s %5s %8s\n",
                        itemName.substring(0, Math.min(itemName.length(), 19)), // Trim long names
                        quantity,
                        itemSubtotal));
            }

            

            // --- Totals (The important numbers) ---
            receiptText.append(String.format("%-25s %8.2f\n", "TOTAL DUE:", finalAmountDue));
            
            
            // Show the formatted bill in a pop-up window so the cashier can check it
            javax.swing.JOptionPane.showMessageDialog(this,
                    new javax.swing.JScrollPane(new javax.swing.JTextArea(receiptText.toString())),
                    "Receipt Ready to Print",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE
            );

            // NOTE: To actually print to a thermal printer, you would replace the JOptionPane
            // with more advanced Java Printing API code or direct port communication.
        } catch (Exception issue) {
            // Uh oh, something went wrong! Tell the user.
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Could not finalize bill: " + issue.getMessage(),
                    "Processing Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtGrandtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrandtotalActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtGrandtotalActionPerformed

    private void txtCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerActionPerformed
        // TODO add your handling code here:
        /*String name = customerNameField.getText().trim();
        if (name.isEmpty()) {
            return;
        }

        java.sql.Connection con = null;
        java.sql.PreparedStatement pst = null;
        java.sql.ResultSet rs = null;
        String query = "SELECT phone, address FROM Customer WHERE name = ?";

        try {
            con = ConnectionClass.createConnection();
            pst = con.prepareStatement(query);
            pst.setString(1, name);
            rs = pst.executeQuery();

            if (rs.next()) {
                // Customer found - Populate fields
                customerPhoneField.setText(rs.getString("phone"));
                customerAddressField.setText(rs.getString("address"));
                javax.swing.JOptionPane.showMessageDialog(this, "Customer details loaded!", "Found", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Customer not found - Treat as new, prompt user to enter phone/address
                customerPhoneField.setText(""); // Clear fields
                customerAddressField.setText("");
                javax.swing.JOptionPane.showMessageDialog(this, "New customer. Please enter Phone and Address.", "New Customer", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (java.sql.SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close resources (con, pst, rs) in a real implementation
        }*/
    }//GEN-LAST:event_txtCustomerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillGenerationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillGenerationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillGenerationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillGenerationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillGenerationUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderitemTable;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblGrandtotal;
    private javax.swing.JTextField txtCash;
    private javax.swing.JTextField txtCustomer;
    private javax.swing.JTextField txtGrandtotal;
    // End of variables declaration//GEN-END:variables
}

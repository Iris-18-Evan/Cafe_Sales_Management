/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Cafe_Sales_Managment;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ucwaz
 */
public class OrderUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public OrderUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Removebtn = new javax.swing.JButton();
        Clearbtn = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Orderr ");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Customer");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 80, -1));
        jPanel1.add(txtCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 150, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food item", "Decimal"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 430, 150));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Order Items");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 100, -1));

        Removebtn.setText("Remove");
        jPanel1.add(Removebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        Clearbtn.setText("Clear");
        jPanel1.add(Clearbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, -1, -1));

        jButton11.setText("Place Order");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 120, -1));

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });
        jPanel1.add(btnReturn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 280, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 330));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // Collect customer details from UI
        String CUSTOMER_NAME = txtCustomer.getText().trim();

        if (CUSTOMER_NAME.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a customer name.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "The order list is empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Build order items from table
        List<OrderItem> orderItems = new ArrayList<>();
        for (int i = 0; i < model.getRowCount(); i++) {
            Object itemObj = model.getValueAt(i, 0);
            Object qtyObj = model.getValueAt(i, 1);
            Object priceObj = model.getValueAt(i, 2);

            if (itemObj == null || qtyObj == null || priceObj == null) {
                JOptionPane.showMessageDialog(this, "Order item details are missing in row " + (i + 1) + ".", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String itemName = itemObj.toString();
            int quantity;
            double price;
            try {
                quantity = Integer.parseInt(qtyObj.toString());
                price = Double.parseDouble(priceObj.toString());
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Invalid number format in row " + (i + 1) + ".", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            orderItems.add(new OrderItem(itemName, quantity, price));
        }

        // Calculate order total
        double totalAmount = orderItems.stream()
                .mapToDouble(item -> item.getQuantity() * item.getUnitPrice())
                .sum();

        Connection con = null;
        PreparedStatement pstmtOrder = null;
        PreparedStatement pstmtDetails = null;

        try {
            con = ConnectionClass.createConnection();
            con.setAutoCommit(false); // Transaction start

            // Insert Order (header)
            String sqlOrder = "INSERT INTO Orders (Customer_Name, Total_Amount) VALUES (?, ?)";
            pstmtOrder = con.prepareStatement(sqlOrder, Statement.RETURN_GENERATED_KEYS);
            pstmtOrder.setString(1, CUSTOMER_NAME);
            pstmtOrder.setDouble(2, totalAmount);
            pstmtOrder.executeUpdate();

            int orderId = -1;
            try (ResultSet rs = pstmtOrder.getGeneratedKeys()) {
                if (rs.next()) {
                    orderId = rs.getInt(1);
                } else {
                    throw new SQLException("Failed to retrieve generated Order ID.");
                }
            }

            // Insert Order Details (line items)
            String sqlDetails = "INSERT INTO Order_Details (Order_ID, Item_Name, Quantity, Unit_Price, Subtotal) VALUES (?, ?, ?, ?, ?)";
            pstmtDetails = con.prepareStatement(sqlDetails);
            for (OrderItem item : orderItems) {
                pstmtDetails.setInt(1, orderId);
                pstmtDetails.setString(2, item.getItemName());
                pstmtDetails.setInt(3, item.getQuantity());
                pstmtDetails.setDouble(4, item.getUnitPrice());
                pstmtDetails.setDouble(5, item.getQuantity() * item.getUnitPrice());
                pstmtDetails.addBatch();
            }
            pstmtDetails.executeBatch();

            con.commit();

            JOptionPane.showMessageDialog(this,
                    "Order placed successfully for " + CUSTOMER_NAME + "! Order ID: " + orderId,
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);

            // Optionally clear UI
            model.setRowCount(0);
            txtCustomer.setText("");
            this.dispose();

        } catch (Exception e) {
            try {
                if (con != null) {
                    con.rollback();
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            try {
                if (pstmtDetails != null) {
                    pstmtDetails.close();
                }
                if (pstmtOrder != null) {
                    pstmtOrder.close();
                }
                if (con != null) {
                    con.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
       
    }//GEN-LAST:event_jButton11ActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        DashboardUI DUI = new DashboardUI();
       DUI.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clearbtn;
    private javax.swing.JButton Removebtn;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton jButton11;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCustomer;
    // End of variables declaration//GEN-END:variables
}
